// Org. source: https://github.com/pest-parser/pest/blob/master/grammars/src/grammars/json.pest

root = _{ SOI ~ (object | array) ~ EOI }

object = { "{" ~ pair ~ ("," ~ pair)* ~ ","? ~ "}" | "{" ~ "}" }
pair   = { string ~ ":" ~ value }

array = { "[" ~ value ~ ("," ~ value)* ~ ","? ~ "]" | "[" ~ "]" }

value = _{ null | bool | number | string | object | array  }

null = { "null" }

bool = { "true" | "false" }

number = @{ "-"? ~ int ~ ("." ~ ASCII_DIGIT+ ~ exp? | exp)? }
int    = @{ "0" | ASCII_NONZERO_DIGIT ~ ASCII_DIGIT* }
exp    = @{ ("E" | "e") ~ ("+" | "-")? ~ ASCII_DIGIT+ }

string  = { PUSH(quote) ~ inner_string ~ POP }

inner_string   = _{ (!PEEK ~ (reference_wrapper | text))* }
reference_wrapper = _{ "${" ~ reference ~ "}" }
reference = @{ (!"}" ~ ANY)* }

text   = ${ (escape | (!("${" | PEEK | "\\") ~ ANY))* }

escape  = _{
    esc_backslash
    | esc_quote_double
    | esc_quote_single
    | esc_backslash
    | esc_slash
    | esc_backspace
    | esc_form_feed
    | esc_new_line
    | esc_carriage_return
    | esc_tab
    | esc_unicode
}

esc_quote_double = @{ "\\\"" }
esc_quote_single = @{ "\\\'" }
esc_backslash = @{ "\\\\" }
esc_slash = @{ "\\/" }
esc_backspace = @{ "\\b" }
esc_form_feed = @{ "\\f" }
esc_new_line = @{ "\\n" }
esc_carriage_return = @{ "\\r" }
esc_tab = @{ "\\t" }
esc_unicode = @{ "\\u" ~ ASCII_HEX_DIGIT{4} }

quote = _{ "\"" | "\'" }

COMMENT = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" }
WHITESPACE = _{ " " | "\t" | "\r" | "\n" }